import { Database } from "@/integrations/supabase/types";

type USTARating = Database["public"]["Enums"]["usta_rating"];
type TeamRole = Database["public"]["Enums"]["team_role"];

export type Player = {
  id: string;
  firstName: string;
  lastName: string;
  cellNumber: string;
  ustaRating: USTARating;
  role: TeamRole;
};

import React, { useState } from "react";
import { toast } from "sonner";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";

type PlayerFormProps = {
  onAddPlayer: (player: Player) => void;
};

export const PlayerForm: React.FC<PlayerFormProps> = ({ onAddPlayer }) => {
  const [firstName, setFirstName] = useState("");
  const [lastName, setLastName] = useState("");
  const [cellNumber, setCellNumber] = useState("");
  const [ustaRating, setUstaRating] = useState<USTARating>("2.5C");
  const [role, setRole] = useState<TeamRole>("player");

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    const newPlayer: Player = {
      id: "", // ID will be generated by Supabase
      firstName,
      lastName,
      cellNumber,
      ustaRating,
      role,
    };
    onAddPlayer(newPlayer);
    setFirstName("");
    setLastName("");
    setCellNumber("");
    setUstaRating("2.5C");
    setRole("player");
    toast.success("Player added successfully!");
  };

  return (
    <form onSubmit={handleSubmit} className="mb-4 space-y-4">
      <div className="grid grid-cols-1 gap-4 sm:grid-cols-2">
        <Input
          type="text"
          placeholder="First Name"
          value={firstName}
          onChange={(e) => setFirstName(e.target.value)}
          required
        />
        <Input
          type="text"
          placeholder="Last Name"
          value={lastName}
          onChange={(e) => setLastName(e.target.value)}
          required
        />
        <Input
          type="text"
          placeholder="Cell Number"
          value={cellNumber}
          onChange={(e) => setCellNumber(e.target.value)}
          required
        />
        <Select value={ustaRating} onValueChange={(value: USTARating) => setUstaRating(value)}>
          <SelectTrigger>
            <SelectValue placeholder="Select Rating" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="2.5C">2.5C</SelectItem>
            <SelectItem value="3.0A">3.0A</SelectItem>
            <SelectItem value="3.0C">3.0C</SelectItem>
            <SelectItem value="3.5A">3.5A</SelectItem>
            <SelectItem value="3.5C">3.5C</SelectItem>
            <SelectItem value="4.0A">4.0A</SelectItem>
            <SelectItem value="4.0C">4.0C</SelectItem>
            <SelectItem value="4.5A">4.5A</SelectItem>
            <SelectItem value="4.5C">4.5C</SelectItem>
          </SelectContent>
        </Select>
        <Select value={role} onValueChange={(value: TeamRole) => setRole(value)}>
          <SelectTrigger>
            <SelectValue placeholder="Select Role" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="player">Player</SelectItem>
            <SelectItem value="captain">Captain</SelectItem>
            <SelectItem value="co_captain">Co-Captain</SelectItem>
          </SelectContent>
        </Select>
      </div>
      <Button type="submit" className="w-full">
        Add Player
      </Button>
    </form>
  );
};